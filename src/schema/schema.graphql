type Query {
  test: User
}

type Mutation {
  createUser(input: UserInput): User!
  createSession(input: SignInInput): Session!
  createFinance(input: FinanceInput): Finance!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  passwordConfirmation: String!
}

type Session {
  user: User!
  token: String!
}

input SignInInput {
  email: String!
  password: String!
}

type Finance {
  id: ID!
  value: String!
  description: String
  type: FinanceType!
}

input FinanceInput {
  value: String!
  description: String
  type: FinanceType!
}

enum FinanceType {
  INCOME
  EXPENSE
}